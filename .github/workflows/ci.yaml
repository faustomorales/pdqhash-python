name: pdqhash-python CI/CD

on: workflow_dispatch

jobs:
  build:
    name: Build Windows and MacOS Package
    strategy:
      matrix:
        python: ["3.13"]
        os: [windows-latest, macos-latest]
    runs-on: ${{ matrix.os }}
    steps:
      - name: Checkout Code
        uses: actions/checkout@v4
        with:
          submodules: true
          fetch-depth: 0
      - name: Set up Python ${{ matrix.python }}
        id: python
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python }}
      - name: Cache Environment
        uses: actions/cache@v3
        with:
          path: .venv
          key: ${{ runner.os }}-${{ steps.python.outputs.python-version }}
      - name: Initialize
        run: make init
      - name: Test
        run: make test
      - name: Package
        run: make package
      - uses: actions/upload-artifact@v4
        with:
          name: ${{ matrix.os }}-${{ matrix.python }}-wheel
          path: dist/*.whl
  build-linux:
    name: Build Linux Package
    strategy:
      matrix:
        python: ["3.13"]
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Code
        uses: actions/checkout@v4
        with:
          submodules: true
          fetch-depth: 0
      - name: Check versioning
        run: make version
      - name: Build Manylinux Wheels
        run: docker run --rm -v ${{ github.workspace }}:/io --workdir /io quay.io/pypa/manylinux_2_28_x86_64 make PYTHON_VERSION=${{ matrix.python }} manylinux-wheel
      - uses: actions/upload-artifact@v4
        with:
          name: linux-${{ matrix.python }}-wheel
          path: dist/*.whl
      - uses: actions/upload-artifact@v4
        if: matrix.python == '3.13'
        with:
          name: linux-${{ matrix.python }}-sdist
          path: dist/*.tar.gz
  merge:
      runs-on: ubuntu-latest
      needs: [build, build-linux]
      steps:
        - name: Merge Artifacts
          uses: actions/upload-artifact/merge@v4
          with:
            name: dist